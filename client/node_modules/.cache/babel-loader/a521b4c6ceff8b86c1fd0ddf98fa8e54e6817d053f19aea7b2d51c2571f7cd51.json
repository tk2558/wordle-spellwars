{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Downloads\\\\wordle-spellwars\\\\src\\\\components\\\\SoloGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoloGame = ({\n  username,\n  wizard\n}) => {\n  _s();\n  const [word, setWord] = useState('MAGIC');\n  const [guesses, setGuesses] = useState([]);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [hp, setHp] = useState(100);\n  const [timeLeft, setTimeLeft] = useState(60);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Enter' && currentGuess.length === 5) {\n        handleSubmitGuess();\n      } else if (/^[a-zA-Z]$/.test(e.key) && currentGuess.length < 5) {\n        setCurrentGuess(prev => prev + e.key.toUpperCase());\n      } else if (e.key === 'Backspace') {\n        setCurrentGuess(prev => prev.slice(0, -1));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [currentGuess]);\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      handleFizzle();\n      return;\n    }\n    const timer = setTimeout(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n  const handleFizzle = () => {\n    setHp(prev => Math.max(0, prev - 5));\n    setTimeLeft(60);\n    setCurrentGuess('');\n    setGuesses([]);\n  };\n  const handleSubmitGuess = () => {\n    const newGuesses = [...guesses, currentGuess];\n    setGuesses(newGuesses);\n    if (currentGuess === word) {\n      const remainingAttempts = 6 - newGuesses.length;\n      setHp(prev => prev); // Fire Mage bonus logic could go here\n      setTimeLeft(60);\n      setGuesses([]);\n    } else if (newGuesses.length >= 6) {\n      handleFizzle();\n    }\n    setCurrentGuess('');\n  };\n  const renderTile = (letter, index, guess) => {\n    const correctLetter = word[index];\n    const isCorrect = letter === correctLetter;\n    const isPresent = !isCorrect && word.includes(letter);\n    let bgColor = 'bg-gray-400';\n    if (isCorrect) bgColor = 'bg-green-500';else if (isPresent) bgColor = 'bg-yellow-500';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-12 h-12 flex items-center justify-center text-white font-bold text-xl border border-gray-600 ${bgColor}`,\n      children: letter\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-[#121212] text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-4 border-gray-500 rounded-2xl p-6 w-full max-w-xl text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"HP: \", hp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), (wizard === null || wizard === void 0 ? void 0 : wizard.img) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: wizard.img,\n          alt: wizard.name,\n          className: \"h-32 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-700 rounded-full h-4 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-500 h-4 rounded-full transition-all duration-1000\",\n          style: {\n            width: `${timeLeft / 60 * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-rows-6 gap-2 justify-center\",\n        children: [...Array(6)].map((_, rowIndex) => {\n          const guess = guesses[rowIndex] || (rowIndex === guesses.length ? currentGuess : '');\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-5 gap-2\",\n            children: [...Array(5)].map((_, colIndex) => {\n              const letter = guess[colIndex] || '';\n              return renderTile(letter, colIndex, guess);\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SoloGame, \"zCT2XwQ5HBe7wZPUJ/iMJ/uAwpU=\");\n_c = SoloGame;\nexport default SoloGame;\nvar _c;\n$RefreshReg$(_c, \"SoloGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SoloGame","username","wizard","_s","word","setWord","guesses","setGuesses","currentGuess","setCurrentGuess","hp","setHp","timeLeft","setTimeLeft","handleKeyDown","e","key","length","handleSubmitGuess","test","prev","toUpperCase","slice","window","addEventListener","removeEventListener","handleFizzle","timer","setTimeout","clearTimeout","Math","max","newGuesses","remainingAttempts","renderTile","letter","index","guess","correctLetter","isCorrect","isPresent","includes","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","img","src","alt","name","style","width","Array","map","_","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["C:/Users/thoma/Downloads/wordle-spellwars/src/components/SoloGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\nconst SoloGame = ({ username, wizard }) => {\r\n  const [word, setWord] = useState('MAGIC');\r\n  const [guesses, setGuesses] = useState([]);\r\n  const [currentGuess, setCurrentGuess] = useState('');\r\n  const [hp, setHp] = useState(100);\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Enter' && currentGuess.length === 5) {\r\n        handleSubmitGuess();\r\n      } else if (/^[a-zA-Z]$/.test(e.key) && currentGuess.length < 5) {\r\n        setCurrentGuess(prev => prev + e.key.toUpperCase());\r\n      } else if (e.key === 'Backspace') {\r\n        setCurrentGuess(prev => prev.slice(0, -1));\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [currentGuess]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      handleFizzle();\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(prev => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft]);\r\n\r\n  const handleFizzle = () => {\r\n    setHp(prev => Math.max(0, prev - 5));\r\n    setTimeLeft(60);\r\n    setCurrentGuess('');\r\n    setGuesses([]);\r\n  };\r\n\r\n  const handleSubmitGuess = () => {\r\n    const newGuesses = [...guesses, currentGuess];\r\n    setGuesses(newGuesses);\r\n\r\n    if (currentGuess === word) {\r\n      const remainingAttempts = 6 - newGuesses.length;\r\n      setHp(prev => prev); // Fire Mage bonus logic could go here\r\n      setTimeLeft(60);\r\n      setGuesses([]);\r\n    } else if (newGuesses.length >= 6) {\r\n      handleFizzle();\r\n    }\r\n\r\n    setCurrentGuess('');\r\n  };\r\n\r\n  const renderTile = (letter, index, guess) => {\r\n    const correctLetter = word[index];\r\n    const isCorrect = letter === correctLetter;\r\n    const isPresent = !isCorrect && word.includes(letter);\r\n\r\n    let bgColor = 'bg-gray-400';\r\n    if (isCorrect) bgColor = 'bg-green-500';\r\n    else if (isPresent) bgColor = 'bg-yellow-500';\r\n\r\n    return (\r\n      <div\r\n        key={index}\r\n        className={`w-12 h-12 flex items-center justify-center text-white font-bold text-xl border border-gray-600 ${bgColor}`}\r\n      >\r\n        {letter}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-[#121212] text-white\">\r\n      <div className=\"border-4 border-gray-500 rounded-2xl p-6 w-full max-w-xl text-center\">\r\n        {/* Player Info */}\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-3xl font-bold\">{username}</h2>\r\n          <p className=\"text-lg\">HP: {hp}</p>\r\n        </div>\r\n\r\n        {/* Wizard Image */}\r\n        {wizard?.img && (\r\n          <div className=\"flex justify-center mb-4\">\r\n            <img src={wizard.img} alt={wizard.name} className=\"h-32 rounded\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"w-full bg-gray-700 rounded-full h-4 mb-6\">\r\n          <div\r\n            className=\"bg-red-500 h-4 rounded-full transition-all duration-1000\"\r\n            style={{ width: `${(timeLeft / 60) * 100}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Wordle Grid */}\r\n        <div className=\"grid grid-rows-6 gap-2 justify-center\">\r\n          {[...Array(6)].map((_, rowIndex) => {\r\n            const guess = guesses[rowIndex] || (rowIndex === guesses.length ? currentGuess : '');\r\n            return (\r\n              <div key={rowIndex} className=\"grid grid-cols-5 gap-2\">\r\n                {[...Array(5)].map((_, colIndex) => {\r\n                  const letter = guess[colIndex] || '';\r\n                  return renderTile(letter, colIndex, guess);\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoloGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}